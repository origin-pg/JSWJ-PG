{"version":3,"sources":["../../../../../assets/scripts/game/assets/scripts/game/rocker.js"],"names":["cc","Class","extends","Component","properties","rocker_bar","type","Node","default","max_r","min_r","onLoad","dir","radius","on","EventType","TOUCH_MOVE","e","touch_pos","getLocation","pos","node","convertToNodeSpaceAR","len","mag","x","y","setPosition","r","Math","atan2","PI","bind","TOUCH_END","v2","TOUCH_CANCEL","start","update","dt"],"mappings":"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","file":"rocker.js","sourceRoot":"../../../../../assets/scripts/game","sourcesContent":["\n\n// *-*-*-*-*-*-*-* 摇杆 *-*-*-*-*-*-*-*-*\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 摇杆把\n        rocker_bar: {\n            type: cc.Node,\n            default: null,\n        },\n        max_r: 120,// 摇杆最大偏移量\n        min_r: 0,// 摇杆最小偏移量\n    },\n\n    onLoad () {\n        this.dir = -1;// 默认为1\n        this.radius = 0;// 角度为0\n\n        // event 当手指在屏幕上移动时\n        this.rocker_bar.on(cc.Node.EventType.TOUCH_MOVE, function(e) {\n            var touch_pos = e.getLocation();// 触摸点坐标\n            var pos = this.node.convertToNodeSpaceAR(touch_pos);// 触摸点坐标转化局部坐标\n            var len = pos.mag();// 返回该向量的长度\n\n            // 如果触摸点到原点的距离大于最大偏移量(限制摇杆按钮范围)\n            if (len > this.max_r) {\n                pos.x = pos.x * this.max_r / len;\n                pos.y = pos.y * this.max_r / len;\n            }\n            this.rocker_bar.setPosition(pos);\n            // 如果触摸点到原点的距离小于最小偏移量(不作处理)\n            if (len < this.min_r) {\n                return;\n            }\n\n            /*\n            x=Math.atan2(1,1);//返回从x轴到点(x,y)的弧度(介于 -PI 与 PI 弧度之间\n            x=180*x/Math.PI;//转换为角度值\n            trace(x);//输出:45\n            */\n\n            this.dir = -1;\n            var r = Math.atan2(pos.y, pos.x);// 返回从x轴到点(x,y)的角度(介于 -PI 与 PI 弧度之间)\n            // console.log(r);// -π ~ π\n\n            // 打印测试(方向判断)\n            if (r >= -8 * Math.PI / 8 && r < -7 * Math.PI / 8) {\n                this.dir = 7;\n                r = -8 * Math.PI / 8;// 限制只能8个方向\n            }\n            else if (r >= -7 * Math.PI / 8 && r < -5 * Math.PI / 8)\n            {\n                this.dir = 6;\n                r = -6 * Math.PI / 8;\n            }\n            else if (r >= -5 * Math.PI / 8 && r < -3 * Math.PI / 8)\n            {\n                this.dir = 5;\n                r = -4 * Math.PI / 8;\n            }\n            else if (r >= -3 * Math.PI / 8 && r < -1 * Math.PI / 8)\n            {\n                this.dir = 4;\n                r = -2 * Math.PI / 8;\n            }\n            else if (r >= -1 * Math.PI / 8 && r < 1 * Math.PI / 8)\n            {\n                this.dir = 3;\n                r = 0 * Math.PI / 8;\n            }\n            else if (r >= 1 * Math.PI / 8 && r < 3 * Math.PI / 8)\n            {\n                this.dir = 2;\n                r = 2 * Math.PI / 8;\n            }\n            else if (r >= 3 * Math.PI / 8 && r < 5 * Math.PI / 8)\n            {\n                this.dir = 1;\n                r = 4 * Math.PI / 8;\n            }\n            else if (r >= 5 * Math.PI / 8 && r < 7 * Math.PI / 8)\n            {\n                this.dir = 8;\n                r = 6 * Math.PI / 8;\n            }\n            else if (r >= 7 * Math.PI / 8 && r <= 8 * Math.PI / 8)\n            {\n                this.dir = 7;\n                r = -8 * Math.PI / 8;\n            }\n            \n            \n            this.radius = r;// 摇杆当前的弧度\n            // console.log(this.radius);\n\n        }.bind(this), this);\n\n        // 停止触摸 初始摇杆位置\n        this.rocker_bar.on(cc.Node.EventType.TOUCH_END, function(e) {\n            this.rocker_bar.setPosition(cc.v2(0, 0));\n            this.dir = -1;\n        }.bind(this), this);\n\n        this.rocker_bar.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {\n            this.rocker_bar.setPosition(cc.v2(0, 0));\n            this.dir = -1;\n        }.bind(this), this);\n    },\n\n    start () {},\n\n    update (dt) {},\n});"]}