{"version":3,"sources":["../../../../../../assets/scripts/game/Hero/assets/scripts/game/Hero/hero.js"],"names":["rocker","require","cc","Class","extends","Component","properties","type","default","mainCamera","Node","hero_speed","onLoad","NOW_FIXED_TIME","FIXED_TIME","hero","node","tiledmap","find","body","getComponent","RigidBody","win_size","winSize","win_size_xMax","width","win_size_yMax","height","start","update","dt","FIXED_update","dir","linearVelocity","v2","tiledmap_Rect","getBoundingBox","hero_Rect","xMin","x","xMax","yMin","y","yMax","s","s_x","Math","cos","radius","s_y","sin","vector","hero_dtPoint","position"],"mappings":"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","file":"hero.js","sourceRoot":"../../../../../../assets/scripts/game/Hero","sourcesContent":["var rocker = require(\"rocker\");// 将摇杆这个类拿过来用\n\n// *-*-*-*-*-*-*-* 英雄节点 *-*-*-*-*-*-*-*-*\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 摇杆对象\n        rocker:{\n            type: rocker,\n            default: null,\n        },\n\n        // -> 主摄像机 <-\n        mainCamera: {\n            default: null,\n            type: cc.Node\n        },\n\n        hero_speed:300,// 英雄速度\n    },\n\n    // *-*-*-*-*-*-*-*-* onLoad() *-*-*-*-*-*-*-*-*\n    onLoad () {\n        // FIXED_UPDATE\n        this.NOW_FIXED_TIME=0;// 当前过去时间为0\n        this.FIXED_TIME=0.03;// 固定每隔0.03s调用一次fixed_update函数\n\n        // 变量初始化\n        this.hero=this.node;\n        this.tiledmap=cc.find(\"Canvas/tiledmap\");\n\n        //获取刚体避免update多次索引\n        this.body = this.getComponent(cc.RigidBody);\n\n        this.win_size = cc.winSize;\n        this.win_size_xMax = (this.win_size.width/2);\n        this.win_size_yMax = (this.win_size.height/2);\n    },\n    \n    // *-*-*-*-*-*-*-* start()  *-*-*-*-*-*-*-*-*-*\n    start () {\n        // console.log(this.tiledmap.getBoundingBox());\n    },\n\n    // *-*-*-*-*-*-*-* update(dt) *-*-*-*-*-*-*-*-*\n    /*\n    // 自己加的机制\n    // FPS不是完全固定的，是参考值，会根据CPU上下浮动，维持在一个水平范围内\n    // dt 会小范围上下浮动\n    // update 要求时间是固定的 否为影响相对位置\n    // FlxedUpdate 固定时间间隔\n    */\n    update (dt) {\n        this.NOW_FIXED_TIME+=dt;\n        while(this.NOW_FIXED_TIME > this.FIXED_TIME){\n            this.FIXED_update(this.FIXED_TIME);\n            this.NOW_FIXED_TIME-=this.FIXED_TIME;\n        }// 来固定时间dt\n    },\n    FIXED_update(dt){\n        if(this.rocker.dir===-1){\n            //刚体通过线速度移动，不考虑惯性\n            this.body.linearVelocity = cc.v2(0,0);;\n            return;// 如果摇杆dir为-1 说明摇杆没有触摸\n        }\n        this.tiledmap_Rect = this.tiledmap.getBoundingBox();// 地图区域\n        this.hero_Rect = this.hero.getBoundingBox();// 人物区域\n\n        /** \n         * @description 限制人物不出范围(地图)\n        */\n        {\n        if (this.hero_Rect.xMin < this.tiledmap_Rect.xMin)\n\t\t{\n\t\t\tthis.hero.x = this.tiledmap_Rect.xMin + this.hero_Rect.width / 2;\n\t\t}\n\t\tif (this.hero_Rect.xMax > this.tiledmap_Rect.xMax)\n\t\t{\n\t\t\tthis.hero.x = this.tiledmap_Rect.xMax - this.hero_Rect.width / 2;;\n\t\t}\n\t\tif (this.hero_Rect.yMin < this.tiledmap_Rect.yMin)\n\t\t{\n\t\t\tthis.hero.y = this.tiledmap_Rect.yMin + this.hero_Rect.height / 2;;\n\t\t}\n\t\tif (this.hero_Rect.yMax > this.tiledmap_Rect.yMax)\n\t\t{\n\t\t\tthis.hero.y = this.tiledmap_Rect.yMax - this.hero_Rect.height / 2;;\n        }\n        }\n\n        // 更新英雄的角度\n        // this.hero_rot = 180 * this.rocker.radius / Math.PI;//转换为角度值\n        // this.node.rotation = 90 - this.hero_rot;\n\n        /**\n         * @description 移动\n         */\n        this.s=this.hero_speed*dt;// 路程分解\n        this.s_x=this.s*Math.cos(this.rocker.radius);// x轴移动量\n        this.s_y=this.s*Math.sin(this.rocker.radius);// y轴移动量\n\n        // 英雄正向移动\n        //this.node.x+=this.s_x;\n        //this.node.y+=this.s_y;\n        // 地图反方向移动\n        // this.tiledmap.x-=this.s_x;\n        // this.tiledmap.y-=this.s_y;\n        \n        // -> 主摄像机跟随主角移动 <-\n        // this.mainCamera.x = this.node.x;\n        // this.mainCamera.y = this.node.y;\n\n        // 刚体线性移动\n        var vector = cc.v2(this.s_x*50,this.s_y*50);\n        this.body.linearVelocity = vector;\n\n        // this.map_move=cc.v2( this.tiledmap.x , this.tiledmap.y );// 地图移动量\n        this.hero_dtPoint=this.hero.position;// 人物偏移中心量(的位置)\n        // this.hero_ToCenter_len=this.hero_dtPoint.mag();// 返回该向量的长度\n        \n        /** \n         * @description 边界滚屏(自己的方法)\n        */\n        if (this.s_x<0) {// 左移\n            if (this.tiledmap_Rect.xMin + this.win_size_xMax >= this.node.x) {\n                this.node.x+=this.s_x;\n            }\n            else if(this.node.x >= this.tiledmap_Rect.xMax - this.win_size_xMax){\n                this.node.x+=this.s_x;\n            }\n            else {\n                this.node.x+=this.s_x;\n                this.mainCamera.x = this.node.x;\n            }\n        }\n        else{// 右移\n            if (this.tiledmap_Rect.xMax - this.win_size_xMax <= this.node.x){\n                this.node.x+=this.s_x;\n            }\n            else if(this.node.x <= this.tiledmap_Rect.xMin + this.win_size_xMax){\n                this.node.x+=this.s_x;\n            }\n            else{\n                this.node.x+=this.s_x;\n                this.mainCamera.x = this.node.x;\n            }\n        }\n        if (this.s_y<0) {// 下移\n            if (this.tiledmap_Rect.yMin + this.win_size_yMax >= this.node.y) {\n                this.node.y+=this.s_y;\n            }\n            else if(this.node.y >= this.tiledmap_Rect.yMax - this.win_size_yMax){\n                this.node.y+=this.s_y;\n            }\n            else {\n                this.node.y+=this.s_y;\n                this.mainCamera.y = this.node.y;\n            }\n        }\n        else{// 上移\n            if (this.tiledmap_Rect.yMax - this.win_size_yMax <= this.node.y){\n                this.node.y+=this.s_y;\n            }\n            else if(this.node.y <= this.tiledmap_Rect.yMin + this.win_size_yMax){\n                this.node.y+=this.s_y;\n            }\n            else{\n                this.node.y+=this.s_y;\n                this.mainCamera.y = this.node.y;\n            }        \n        }\n    },\n});\n"]}